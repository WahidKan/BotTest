﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace MLModel_WebApi1
{
    public partial class MLModel
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Text.FeaturizeText(@"Sentiment Text", @"Sentiment Text")      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", @"Sentiment Text"))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(@"Sentiment", @"Sentiment"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=5,MinimumExampleCountPerLeaf=11,NumberOfIterations=4,MaximumBinCountPerFeature=305,LearningRate=0.36784142250382F,LabelColumnName=@"Sentiment",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=0.913636895058712F,FeatureFraction=0.936961429981392F,L1Regularization=2E-10F,L2Regularization=91.7748375679865F}}))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

            return pipeline;
        }
    }
}
